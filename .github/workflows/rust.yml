name: Rust Build

on: [push]

env:
  RUST_TOOLCHAIN: stable
  PROJECT_NAME: my_project

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: windows-executable-${{ env.PROJECT_NAME }}
            binary_path: target\x86_64-pc-windows-msvc\release\${{ env.PROJECT_NAME }}.exe
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: mac-executable-${{ env.PROJECT_NAME }}
            binary_path: target/x86_64-apple-darwin/release/${{ env.PROJECT_NAME }}

    steps:
      - uses: actions/checkout@v2
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          override: true
          target: ${{ matrix.target }}
      - name: Build
        run: cargo build --release --target ${{ matrix.target }}
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.artifact_name }}
          path: ${{ matrix.binary_path }}