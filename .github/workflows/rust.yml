name: Rust Build

on: push

jobs:
  build-and-upload:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - build: macos
            os: macos-latest
            target: x86_64-apple-darwin

          - build: windows-gnu
            os: windows-latest
            target: x86_64-pc-windows-gnu

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --verbose --release --target ${{ matrix.target }}

      - name: Prepare Artifact
        shell: bash
        run: |
          binary_name="${{ matrix.target }}"
          version="latest"
          dirname="$binary_name-$version-${{ matrix.target }}"
          mkdir "$dirname"
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            mv "target/${{ matrix.target }}/release/$binary_name.exe" "$dirname/"
          else
            mv "target/${{ matrix.target }}/release/$binary_name" "$dirname/"
          fi
          echo "ASSET_PATH=$dirname" >> $GITHUB_ENV

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.build }}-artifact
          path: ${{ env.ASSET_PATH }}