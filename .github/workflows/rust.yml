name: Rust Build

on: [push]

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            extension: exe
            binary_path: target\x86_64-pc-windows-msvc\release
          - os: macos-latest
            target: x86_64-apple-darwin
            extension: ''
            binary_path: target/x86_64-apple-darwin/release

    steps:
      - uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}

      - name: Strip Executable (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          strip ${{ matrix.binary_path }}/your_executable_name

      - name: Package Executable
        run: |
          cd ${{ matrix.binary_path }}
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            Compress-Archive -Path your_executable_name.${{ matrix.extension }} -DestinationPath ../../your_executable_name.zip
          else
            tar -czvf ../../your_executable_name.tar.gz your_executable_name
          fi
        shell: ${{ matrix.os == 'windows-latest' && 'powershell' || 'bash' }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}-binary
          path: ${{ github.workspace }}/auth0-poc.${{ matrix.os == 'windows-latest' && 'zip' || 'tar.gz' }}
