name: Rust Build

on: push

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: windows-latest
            target: x86_64-pc-windows-msvc
    steps:
      - uses: actions/checkout@v2

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          override: true

      - name: Build binary
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}

      - name: Create Release Directory
        run: mkdir -p release

      - name: Compress for Windows
        if: runner.os == 'Windows'
        run: Compress-Archive -Path target/x86_64-pc-windows-msvc/release/* -DestinationPath release/JoakimCarlsson/auth0_cli_poc-699a445bb46e033784ff8c7da2cb06e327194bab-x86_64-pc-windows-msvc.zip
        shell: pwsh

      - name: Compress for macOS and Linux
        if: runner.os != 'Windows'
        run: tar czvf release/JoakimCarlsson/auth0_cli_poc-699a445bb46e033784ff8c7da2cb06e327194bab-x86_64-apple-darwin.tar.gz -C target/x86_64-apple-darwin/release .
        shell: bash

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.target }}
          path: release/*